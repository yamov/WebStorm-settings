<templateSet group="RN">
  <template name="rel" value="React$Element&lt;*&gt;" description="React$Element" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rsc" value="const $COMPONENT$ = (props: Props): React$Element&lt;*&gt; =&gt; (&#10;)&#10;&#10;export default $COMPONENT$" description="React stateless component" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ir" value="import React from 'react'" description="import React" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="irn" value="import { $COMPONENT$ } from 'react-native'" description="import from RN" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="it" value="import type { $TYPE$ } from './types'" description="import type" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="is" value="import styles from './styles'" description="import styles" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="msp" value="const mapStateToProps = (state: ReduxState, ownProps: OwnProps): MappedStateProps =&gt; ({&#10;  &#10;})" description="mapStateToProps" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="iu" value="import * as utils from 'app/services/utils'" description="import utils" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="il" value="import _ from 'lodash'" description="import lodash" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rcc" value="class $COMPONENT$ extends PureComponent&lt;Props&gt; {&#10;  render = (): React$Element&lt;*&gt; =&gt; {&#10;    &#10;  }&#10;}&#10;&#10;export default $COMPONENT$" description="React class component" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="pr" value="type CommonProps = {|&#10;  &#10;|}&#10;&#10;export type WebProps = {|&#10;  ...CommonProps,&#10;  &#10;|}&#10;&#10;export type NativeProps = {|&#10;  ...CommonProps,&#10;  &#10;|}&#10;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="iss" value="import * as styles from './styles'" description="import * as styles" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="stc" value="const $COMPONENT$ = styled.`${styles.}`&#10;" description="Styled component" toReformat="false" toShortenFQNames="true">
    <variable name="COMPONENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="ist" value="import styled from 'styled-components'" description="import styled" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>